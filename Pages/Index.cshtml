@page
@model IndexModel
@{
    ViewData["Title"] = "Power BI Dashboard";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4">Power BI Embedded Dashboard</h1>
            <p class="lead">Interactive analytics and business intelligence</p>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-bar-chart-fill me-2"></i>Dashboard Preview
                    </h5>
                    <div>
                        <button id="refreshBtn" class="btn btn-sm btn-outline-light" title="Refresh Dashboard">
                            <i class="bi bi-arrow-clockwise"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.ViewModel.IsLoaded)
                    {
                        <div id="thumbnailContainer" class="text-center position-relative" style="cursor: pointer;">
                            @if (!string.IsNullOrEmpty(Model.ViewModel.ThumbnailUrl))
                            {
                                <img src="@Model.ViewModel.ThumbnailUrl" class="img-fluid" alt="Dashboard Thumbnail" id="dashboardThumbnail" />
                                <div class="position-absolute top-50 start-50 translate-middle">
                                    <div class="btn btn-primary btn-lg rounded-circle p-3 play-button">
                                        <i class="bi bi-play-fill"></i>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="p-5 bg-light">
                                    <i class="bi bi-bar-chart" style="font-size: 4rem; color: #dee2e6;"></i>
                                    <p class="mt-3 text-muted">Dashboard preview not available</p>
                                </div>
                            }
                            <div class="p-3 bg-light">
                                <span class="text-primary">
                                    <i class="bi bi-arrows-fullscreen me-1"></i> Click to view full screen
                                </span>
                            </div>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(Model.ViewModel.ErrorMessage))
                    {
                        <div class="alert alert-danger m-3">
                            <h5>Error Loading Dashboard</h5>
                            <p>@Model.ViewModel.ErrorMessage</p>
                            <button class="btn btn-sm btn-outline-danger" onclick="window.location.reload()">
                                <i class="bi bi-arrow-clockwise me-1"></i> Try Again
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center align-items-center p-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <span class="ms-3">Loading dashboard preview...</span>
                        </div>
                    }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Dashboard Modal -->
<div class="modal fade" id="dashboardModal" tabindex="-1" aria-labelledby="dashboardModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="dashboardModalLabel">
                    <i class="bi bi-bar-chart-fill me-2"></i>Interactive Dashboard
                </h5>
                <div class="ms-auto me-3">
                    <div class="spinner-border spinner-border-sm text-light d-none" role="status" id="loadingSpinner">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0 bg-light">
                <div id="embedContainer" style="width: 100%; height: calc(100vh - 56px);">
                    <div class="d-flex flex-column justify-content-center align-items-center h-100">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="text-muted">Loading dashboard...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary" id="fullscreenBtn" onclick="toggleFullscreen()" title="Toggle Fullscreen">
                        <i class="bi bi-fullscreen me-1"></i> Fullscreen
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="refreshDashboardBtn" title="Refresh Dashboard">
                        <i class="bi bi-arrow-clockwise me-1"></i> Refresh
                    </button>
                </div>
                <button type="button" class="btn btn-primary ms-auto" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-1"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Error Toast -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="errorToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-danger text-white">
            <strong class="me-auto">Error</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="errorMessage">
            An error occurred while loading the dashboard.
        </div>
    </div>
</div>

@section Styles {
    <style>
        #dashboardThumbnail {
            transition: transform 0.2s ease-in-out;
            width: 100%;
            height: auto;
        }
        #dashboardThumbnail:hover {
            transform: scale(1.01);
        }
        .modal-fullscreen .modal-dialog {
            max-width: 100%;
            width: 100%;
            margin: 0;
        }
        .modal-fullscreen .modal-content {
            height: 100vh;
            border: none;
            border-radius: 0;
        }
        #embedContainer iframe {
            border: none;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://npmcdn.com/es6-promise@3.2.1"></script>
    <script src="https://unpkg.com/powerbi-client@2.22.2/dist/powerbi.min.js"></script>
    
    <script>
        // Global variables
        let powerbi = null;
        let embedConfig = null;
        let dashboard = null;
        
        // When the document is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize the thumbnail click handler
            const thumbnailContainer = document.getElementById('thumbnailContainer');
            if (thumbnailContainer) {
                thumbnailContainer.addEventListener('click', function() {
                    showEmbeddedDashboard();
                });
            }
            
            // Initialize the refresh button
            const refreshBtn = document.getElementById('refreshBtn');
            if (refreshBtn) {
                refreshBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    window.location.reload();
                });
            }
            
            // Initialize the modal
            const modal = document.getElementById('dashboardModal');
            if (modal) {
                // Clean up Power BI embedding when modal is closed
                modal.addEventListener('hidden.bs.modal', function () {
                    if (dashboard) {
                        dashboard.off('loaded');
                        dashboard.off('error');
                        dashboard = null;
                    }
                    
                    // Clear the embed container
                    const embedContainer = document.getElementById('embedContainer');
                    if (embedContainer) {
                        embedContainer.innerHTML = `
                            <div class="d-flex justify-content-center align-items-center h-100">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </div>`;
                    }
                });
                
                // Handle fullscreen change
                document.addEventListener('fullscreenchange', function() {
                    const fullscreenBtn = document.getElementById('fullscreenBtn');
                    if (fullscreenBtn) {
                        if (document.fullscreenElement) {
                            fullscreenBtn.innerHTML = '<i class="bi bi-fullscreen-exit me-1"></i> Exit Fullscreen';
                        } else {
                            fullscreenBtn.innerHTML = '<i class="bi bi-fullscreen me-1"></i> Fullscreen';
                        }
                    }
                });
            }
                }
                
                // Clear the embed container
                const embedContainer = document.getElementById('embedContainer');
                if (embedContainer) {
                    embedContainer.innerHTML = `
                        <div class="d-flex justify-content-center align-items-center h-100">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>`;
                }
            });
        });
        
        // Toggle fullscreen mode
        function toggleFullscreen() {
            const element = document.documentElement;
            
            if (!document.fullscreenElement && !document.webkitFullscreenElement && 
                !document.mozFullScreenElement && !document.msFullscreenElement) {
                // Enter fullscreen
                if (element.requestFullscreen) {
                    element.requestFullscreen();
                } else if (element.webkitRequestFullscreen) {
                    element.webkitRequestFullscreen();
                } else if (element.mozRequestFullScreen) {
                    element.mozRequestFullScreen();
                } else if (element.msRequestFullscreen) {
                    element.msRequestFullscreen();
                }
            } else {
                // Exit fullscreen
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.webkitExitFullscreen) {
                    document.webkitExitFullscreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.msExitFullscreen) {
                    document.msExitFullscreen();
                }
            }
        }
        
        // Function to show the embedded dashboard
        async function showEmbeddedDashboard() {
            try {
                const modalEl = document.getElementById('dashboardModal');
                const modal = new bootstrap.Modal(modalEl);
                const embedContainer = document.getElementById('embedContainer');
                
                if (!embedContainer) {
                    throw new Error('Embed container not found');
                }
                
                // Show loading state
                embedContainer.innerHTML = `
                    <div class="d-flex flex-column justify-content-center align-items-center h-100">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="text-muted">Loading dashboard...</p>
                    </div>`;
                
                // Show the modal
                modal.show();
                
                // Get the embed configuration from the server-side model
                if (!embedConfig) {
                    try {
                        // Parse the embed config from the server
                        embedConfig = JSON.parse('@Html.Raw(Model.ViewModel.EmbedConfig)');
                        
                        // Add additional settings
                        embedConfig.settings = {
                            panes: {
                                filters: { expanded: false, visible: false },
                                pageNavigation: { visible: false }
                            },
                            background: 1,
                            hideTabs: true,
                            hideEditButton: true
                        };
                    } catch (e) {
                        console.error('Error parsing embed config:', e);
                        throw new Error('Failed to load dashboard configuration');
                    }
                }
                
                // Embed the dashboard
                powerbi = window.powerbi;
                dashboard = powerbi.embed(embedContainer, embedConfig);
                
                // Handle dashboard load event
                dashboard.on('loaded', function() {
                    console.log('Dashboard loaded successfully');
                    
                    // Focus the iframe for keyboard navigation
                    const iframe = embedContainer.querySelector('iframe');
                    if (iframe) {
                        iframe.focus();
                    }
                });
                
                // Handle errors
                dashboard.on('error', function(event) {
                    console.error('Power BI error:', event.detail);
                    embedContainer.innerHTML = `
                        <div class="alert alert-danger m-3">
                            <h5>Error loading dashboard</h5>
                            <p class="mb-0">${event.detail.message || 'An error occurred while loading the dashboard.'}</p>
                        </div>`;
                });
                
            } catch (error) {
                console.error('Error:', error);
                const modalBody = document.querySelector('#dashboardModal .modal-body');
                if (modalBody) {
                    modalBody.innerHTML = `
                        <div class="alert alert-danger m-3">
                            <h5>Error</h5>
                            <p class="mb-0">${error.message || 'An error occurred while loading the dashboard.'}</p>
                        </div>`;
                }
            }
        }
    </script>
}
